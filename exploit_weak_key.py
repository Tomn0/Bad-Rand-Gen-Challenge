from bad_random_generator import load_priv_key, load_publ_key
from math import gcd
#####################
# Exploit weak keys #
#####################
def exploit_weak_keys(first = 1, second = 4):
    first_key_publ = load_publ_key(first)
    second_key_publ = load_publ_key(second)

    n1 = first_key_publ.public_numbers().n
    n2 = second_key_publ.public_numbers().n

    first_key_publ = load_publ_key(first)
    first_key_priv = load_priv_key(first)
    print("Loaded first key..")

    second_key_publ = load_publ_key(second)
    second_key_priv = load_priv_key(second)
    print("Loaded second key..")

    p = gcd(n1, n2)
    q = n2 // p
    print(q)
    print()
    print("Found value p:")
    print("GCD = ", p)

    phi = (p-1)*(q-1)
    print(type(phi))
    print(type(second_key_publ.public_numbers().e))
    d = __builtins__.pow(second_key_publ.public_numbers().e,-1,phi)
    
    print("Found private value:")
    print("d = ", d)


##################
# Key Generation #
##################

if __name__ == "__main__":
    exploit_weak_keys(first = 1, second = 4)